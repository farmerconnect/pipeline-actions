name: Docker - Build, Push

on:
  workflow_call:
    inputs:
      serviceName:
        required: true
        type: string
      currentTag:
        required: true
        type: string
    secrets:
      azureCredentials:
        required: true
      registryLoginServer:
        required: true
      resourceGroup:
        required: true
      registryUsername:
        required: true
      registryPassword:
        required: true
      snykToken:
        required: true


jobs:
  build-and-push-image:
    name: Build and Push Stage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Set Job-Environment Variables
        run: echo "IMAGE_NAME=${{ secrets.registryLoginServer }}/${{ inputs.serviceName }}" >> $GITHUB_ENV

      - name: AZ login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.azureCredentials }}

      - name: Docker login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.registryLoginServer }}
          username: ${{ secrets.registryUsername }}
          password: ${{ secrets.registryPassword }}
      - name: Build and push image
        run: |
          docker build . -t ${IMAGE_NAME}:${{ inputs.currentTag }}
          docker build . -t ${IMAGE_NAME}:latest
          docker push ${IMAGE_NAME}:${{ inputs.currentTag }}
          docker push ${IMAGE_NAME}:latest

      - name: Deploy to registry - current
        uses: azure/aci-deploy@v1
        with:
          resource-group: ${{ secrets.resourceGroup }}
          dns-name-label: ${{ secrets.resourceGroup }}${{ github.run_number }}
          image: ${{ env.IMAGE_NAME }}:${{ inputs.currentTag }}
          registry-login-server: ${{ secrets.registryLoginServer }}
          registry-username: ${{ secrets.registryUsername }}
          registry-password: ${{ secrets.registryPassword }}
          name: ${{ inputs.serviceName }}
          location: 'central us'

      - name: Deploy to registry - latest
        uses: azure/aci-deploy@v1
        with:
          resource-group: ${{ secrets.resourceGroup }}
          dns-name-label: ${{ secrets.resourceGroup }}${{ github.run_number }}
          image: ${{ env.IMAGE_NAME }}:latest
          registry-login-server: ${{ secrets.registryLoginServer }}
          registry-username: ${{ secrets.registryUsername }}
          registry-password: ${{ secrets.registryPassword }}
          name: ${{ inputs.serviceName }}
          location: 'central us'

  snyk-docker-scan:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
    - name: Run Snyk to check Docker image for vulnerabilities
      uses: snyk/actions/docker@master
      env:
        SNYK_TOKEN: ${{ secrets.snykToken }}
      with:
        image: ${{ env.IMAGE_NAME }}:${{ inputs.currentTag }}